function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(ELF.getindex, ( ELF.Sections, Int64,))
    precompile(ELF.compute_X86_64, ( ELF.RelocationRef{ELF.ELF64.Rela}, UInt64, UInt32,))
    precompile(ELF.readmeta, ( Base.AbstractIOBuffer{Array{UInt8, 1}}, Type{ELF.ELFHandle},))
    precompile(ELF.getindex, ( ELF.Symbols, UInt64,))
    precompile(ELF.getindex, ( ELF.Relocations{ELF.ELF64.Rela}, Int64,))
    precompile(ELF.Type, (Type{ELF.ELFHandle}, Base.AbstractIOBuffer{Array{UInt8, 1}}, ELF.ELF64.File,))
    precompile(ELF.Type, (Type{ELF.Relocations}, ELF.SectionRef,))
    precompile(ELF.debugsections, ( ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}},))
    precompile(ELF.endianness, ( UInt8,))
    precompile(ELF.seek, ( ELF.SectionRef, UInt32,))
    precompile(ELF.link_sec, ( ELF.SectionRef,))
    precompile(ELF.endof, ( ELF.Relocations{ELF.ELF64.Rela},))
    precompile(ELF.info_sec, ( ELF.SectionRef,))
    precompile(ELF.seek, ( ELF.SectionRef, UInt64,))
    precompile(ELF.r_type, ( ELF.ELF64.Rela,))
    precompile(ELF.Type, (Type{ELF.SectionRef}, ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}}, ELF.ELF64.SectionHeader,))
    precompile(ELF.seek, ( ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}}, UInt64,))
    precompile(ELF.r_sym, ( ELF.ELF64.Rela,))
    precompile(ELF.load_strtab, ( ELF.SectionRef,))
    precompile(ELF.handle, ( ELF.SectionRef,))
    precompile(ELF.Type, (Type{ObjFileBase.StrTab}, ELF.SectionRef,))
    precompile(ELF.readuntil, ( ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Char,))
    precompile(ELF.read, ( Base.AbstractIOBuffer{Array{UInt8, 1}}, Type{ELF.ELFSectionHeader}, ELF.ELF64.File,))
    precompile(ELF.ELF64.sizeof, ( Type{ELF.ELF64.SymtabEntry},))
    precompile(ELF.Type, (Type{ELF.Relocations{ELF.ELF64.Rela}}, ELF.SectionRef,))
    precompile(ELF.deref, ( ELF.SectionRef,))
    precompile(ELF.next, ( ELF.Sections, Int64,))
    precompile(ELF.sectionoffset, ( ELF.ELF64.SectionHeader,))
    precompile(ELF.sectionsize, ( ELF.ELF64.SectionHeader,))
    precompile(ELF.unpack, ( ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Type{ELF.ELF64.Rela},))
    precompile(ELF.unpack, ( ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Type{ELF.ELF64.SymtabEntry},))
    precompile(ELF.relocate!, ( Base.AbstractIOBuffer{Array{UInt8, 1}}, ELF.ELFHandle{Base.AbstractIOBuffer{Array{UInt8, 1}}},))
end
